<UserControl x:Class="MasterBoxGetWeight.Views.GetWeightView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MasterBoxGetWeight.Views"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="800" Background="White">

    <UserControl.Resources>

        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsFocused"  Value="True">
                    <Setter Property="Background" Value="{StaticResource color_focused}"/>
                </Trigger>
                <DataTrigger Binding="{Binding Path=GM.totalResult}" Value="Waiting...">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="label_header">
            <Setter Property="FontSize" Value="{StaticResource fontSizeNormal}"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        
        
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="150"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="320"/>
            </Grid.ColumnDefinitions>

            <StackPanel Margin="5,0,5,5">
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="Label" x:Key="label_value">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                    </Style>
                </StackPanel.Resources>

                <Label Content="Box ID 1:"/>
                <TextBox local:FocusExtension.IsFocused="{Binding Path=GM.allowInput1}" Height="35" FontSize="22" Text="{Binding Path=GM.inputBarcode1, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding InputBox1Command}" />
                    </TextBox.InputBindings>
                </TextBox>
                <Label Content="Box ID 2:"/>
                <TextBox IsEnabled="{Binding Path=GM.allowInput2, UpdateSourceTrigger=PropertyChanged}" local:FocusExtension.IsFocused="{Binding Path=GM.allowInput2}" Height="35" FontSize="22" Text="{Binding Path=GM.inputBarcode2, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding InputBox2Command}" />
                    </TextBox.InputBindings>
                </TextBox>
                <WrapPanel Margin="0,10,0,0">
                    <Label Content="ID:"/>
                    <Label Style="{StaticResource label_value}" Content="{Binding Path=GM.productID, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="Actual:"/>
                    <Label Style="{StaticResource label_value}" Content="{Binding Path=GM.actualValue, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="Start time:"/>
                    <Label Style="{StaticResource label_value}" Content="{Binding Path=GM.startTime, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="End time:"/>
                    <Label Style="{StaticResource label_value}" Content="{Binding Path=GM.endTime, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="Total time:"/>
                    <Label Style="{StaticResource label_value}" Content="{Binding Path=GM.totalTime, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <Label Content="Total result:"/>
                <WrapPanel>
                    <Label Content="{Binding Path=GM.totalResult, UpdateSourceTrigger=PropertyChanged}">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Margin" Value="0,-15,0,0"/>
                                <Setter Property="FontSize" Value="100"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Foreground" Value="{StaticResource color_ready}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=GM.totalResult}" Value="Passed">
                                        <Setter Property="Foreground" Value="{StaticResource color_pass}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=GM.totalResult}" Value="ByPass">
                                        <Setter Property="Foreground" Value="{StaticResource color_pass}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=GM.totalResult}" Value="Failed">
                                        <Setter Property="Foreground" Value="{StaticResource color_fail}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=GM.totalResult}" Value="Waiting...">
                                        <Setter Property="Foreground" Value="{StaticResource color_wait}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Button Command="{Binding ByPassCommand}" Content="By Pass">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="FontSize" Value="{StaticResource fontSizeButton}"/>
                                <Setter Property="Width" Value="80"/>
                                <Setter Property="Height" Value="40"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="Margin" Value="5,5,0,0"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=GM.totalResult}" Value="Failed">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </WrapPanel>
                
            </StackPanel>

            <GridSplitter Grid.Column="1" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

            <StackPanel Grid.Column="2">
                <StackPanel.Resources>
                    <Style TargetType="Label" x:Key="label_header">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                    <Style TargetType="Label" x:Key="label_content">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="Margin" Value="150,0,0,0"/>
                        <Setter Property="Height" Value="30"/>
                    </Style>

                </StackPanel.Resources>

                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Work order:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.workOrder, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Operator ID:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.operatorID, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Line name:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.lineName, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Station number:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.stationNumber, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Jig number:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.jigNumber, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Operation code list:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.operationCodeList, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Base routing name:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.baseRoutingName, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Base routing version:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.baseRoutingVersion, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Product name:"/>
                    <Label ToolTip="{Binding Path=SM.productName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource label_content}" Content="{Binding Path=SM.productName, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Product code:"/>
                    <Label ToolTip="{Binding Path=SM.productCode, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource label_content}" Content="{Binding Path=SM.productCode, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Unit of measurement:"/>
                    <Label Style="{StaticResource label_content}" Content="{Binding Path=SM.UOM, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
                <Grid>
                    <Label Style="{StaticResource label_header}" Content="Limit:"/>
                    <WrapPanel>
                        <Label Height="30" FontSize="{StaticResource fontSizeNormal}" Margin="150,0,0,0" Content="{Binding Path=SM.lowerLimit, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Height="30" FontSize="{StaticResource fontSizeNormal}" Content="~"/>
                        <Label Height="30" FontSize="{StaticResource fontSizeNormal}" Content="{Binding Path=SM.upperLimit, UpdateSourceTrigger=PropertyChanged}"/>
                    </WrapPanel>
                    <Label Style="{StaticResource label_content}" Content=""/>
                </Grid>
            </StackPanel>
        </Grid>

        <TabControl BorderThickness="0,0,0,1" Margin="5,0,0,0" TabStripPlacement="Bottom" Grid.Row="1">

            <TabItem>
                <TabItem.Header>
                    <Label Style="{StaticResource label_header}" Content="Log Weigh"/>
                </TabItem.Header>

                <ScrollViewer x:Name="scl_weigh">
                    <RichTextBox IsReadOnly="True" TextBlock.LineHeight="1" FontSize="{StaticResource fontSizeNormal}" FontWeight="Normal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <FlowDocument>
                            <Paragraph>
                                <Run Text="{Binding Path=GM.logWeigh,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ScrollViewer>
            </TabItem>
            
            
            <TabItem>
                <TabItem.Header>
                    <Label Style="{StaticResource label_header}" Content="Log Table"/>
                </TabItem.Header>

                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Path=GM.collectionWeight, UpdateSourceTrigger=PropertyChanged}"
                              Background="White"
                              CanUserAddRows="False" CanUserDeleteRows="False"
                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                              GridLinesVisibility="None"
                              HeadersVisibility="Column"
                              BorderThickness="1,1,1,1"
                              SelectionUnit="FullRow" SelectionMode="Extended">

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0,0,1,1"/>
                            <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                            <Setter Property="FontSize" Value="{StaticResource fontSizeNormal}"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="Height" Value="Auto"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FontSize" Value="{StaticResource fontSizeNormal}"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="Padding" Value="3,0,0,0"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ID" Binding="{Binding id}"/>
                        <DataGridTextColumn Header="work_order" Binding="{Binding work_order}"/>
                        <DataGridTextColumn Header="operator" Binding="{Binding Operator}"/>
                        <DataGridTextColumn Header="line_name" Binding="{Binding line_name}"/>
                        <DataGridTextColumn Header="operation_code_list" Binding="{Binding operation_code_list}"/>
                        <DataGridTextColumn Header="station_number" Binding="{Binding station_number}"/>
                        <DataGridTextColumn Header="jig_number" Binding="{Binding jig_number}"/>
                        <DataGridTextColumn Header="product_name" Binding="{Binding product_name}"/>
                        <DataGridTextColumn Header="product_code" Binding="{Binding product_code}"/>
                        <DataGridTextColumn Header="base_routing_name" Binding="{Binding base_routing_name}"/>
                        <DataGridTextColumn Header="base_routing_version" Binding="{Binding base_routing_version}"/>
                        <DataGridTextColumn Header="uid1" Binding="{Binding uid1}"/>
                        <DataGridTextColumn Header="uid2" Binding="{Binding uid2}"/>
                        <DataGridTextColumn Header="uid3" Binding="{Binding uid3}"/>
                        <DataGridTextColumn Header="test_item" Binding="{Binding test_item}"/>
                        <DataGridTextColumn Header="result" Binding="{Binding result}"/>
                        <DataGridTextColumn Header="lower_limit" Binding="{Binding lower_limit}"/>
                        <DataGridTextColumn Header="upper_limit" Binding="{Binding upper_limit}"/>
                        <DataGridTextColumn Header="actual_value" Binding="{Binding actual_value}"/>
                        <DataGridTextColumn Header="unit_of_measurement" Binding="{Binding unit_of_measurement}"/>
                        <DataGridTextColumn Header="error_code" Binding="{Binding error_code}"/>
                        <DataGridTextColumn Header="error_message" Binding="{Binding error_message}"/>
                        <DataGridTextColumn Header="cause_of_failure" Binding="{Binding cause_of_failure}"/>
                        <DataGridTextColumn Header="component" Binding="{Binding component}"/>
                        <DataGridTextColumn Header="field24" Binding="{Binding field24}"/>
                        <DataGridTextColumn Header="field25" Binding="{Binding field25}"/>
                        <DataGridTextColumn Header="field26" Binding="{Binding field26}"/>
                        <DataGridTextColumn Header="field27" Binding="{Binding field27}"/>
                        <DataGridTextColumn Header="field28" Binding="{Binding field28}"/>
                        <DataGridTextColumn Header="field29" Binding="{Binding field29}"/>
                        <DataGridTextColumn Header="start_time" Binding="{Binding start_time}"/>
                        <DataGridTextColumn Header="end_time" Binding="{Binding end_time}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            
            <TabItem Visibility="Collapsed">
                <TabItem.Header>
                    <Label Style="{StaticResource label_header}" Content="Log System"/>
                </TabItem.Header>

                <ScrollViewer>
                    <RichTextBox IsReadOnly="True" TextBlock.LineHeight="1" FontSize="{StaticResource fontSizeNormal}" FontWeight="Normal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <FlowDocument>
                            <Paragraph>
                                <Run Text="{Binding Path=GM.logSystem,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ScrollViewer>
                
            </TabItem>

           
            
        </TabControl>
        
    </Grid>
    
    
</UserControl>
