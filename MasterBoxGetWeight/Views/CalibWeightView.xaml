<UserControl x:Class="MasterBoxGetWeight.Views.CalibWeightView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MasterBoxGetWeight.Views"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="800" Background="White">

    <UserControl.Resources>

        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsFocused"  Value="True">
                    <Setter Property="Background" Value="{StaticResource color_focused}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style TargetType="ProgressBar">
            <Setter Property="Foreground" Value="Lime"/>
            <Setter Property="Height" Value="5"/>
            <Setter Property="Margin" Value="5,0,50,0"/>
        </Style>

        <Style TargetType="Label" x:Key="label_header">
            <Setter Property="FontSize" Value="{StaticResource fontSizeNormal}"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

    </UserControl.Resources>

    <Grid Margin="5,0,5,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="120"/>
            </Grid.RowDefinitions>

            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </StackPanel.Resources>

                <Label Content="Số lượng sample:"/>
                <TextBox Margin="0,0,50,0" Text="{Binding Path=CM.Sample, UpdateSourceTrigger=PropertyChanged}" />
                <Button Command="{Binding StartCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="100"/>
                            <Setter Property="Height" Value="35"/>
                            <Setter Property="Margin" Value="0,5,0,0"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Content" Value="Start"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=CM.totalResult}" Value="Waiting...">
                                    <Setter Property="Content" Value="Stop"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <WrapPanel>
                    <Label Content="Progress:"/>
                    <Label Content="{Binding Path=CM.progressValue, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="/"/>
                    <Label Content="{Binding Path=CM.progressMax, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <ProgressBar Value="{Binding Path=CM.progressValue, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=CM.progressMax, UpdateSourceTrigger=PropertyChanged}" />
                <WrapPanel Margin="0,20,0,0">
                    <Label Content="Sample: "/>
                    <Label Content="{Binding Path=CM.Sample, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="Average: "/>
                    <Label Content="{Binding Path=CM.Average, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="Start time: "/>
                    <Label Content="{Binding Path=CM.startTime, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="End time: "/>
                    <Label Content="{Binding Path=CM.endTime, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                <WrapPanel>
                    <Label Content="Total time: "/>
                    <Label Content="{Binding Path=CM.totalTime, UpdateSourceTrigger=PropertyChanged}"/>
                </WrapPanel>
                
                <Label Content="Total result: "/>
                <Label Margin="0,-10,0,0" FontSize="45" FontWeight="SemiBold" Content="{Binding Path=CM.totalResult, UpdateSourceTrigger=PropertyChanged}">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="{StaticResource color_ready}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=CM.totalResult}" Value="Passed">
                                    <Setter Property="Foreground" Value="{StaticResource color_pass}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=CM.totalResult}" Value="Failed">
                                    <Setter Property="Foreground" Value="{StaticResource color_fail}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=CM.totalResult}" Value="Waiting...">
                                    <Setter Property="Foreground" Value="{StaticResource color_wait}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            
            <TabControl Grid.Row="1" TabStripPlacement="Bottom">
                <TabItem>
                    <TabItem.Header>
                        <Label Style="{StaticResource label_header}" Content="Log Weigh"/>
                    </TabItem.Header>

                    <ScrollViewer x:Name="scl_weigh">
                        <RichTextBox IsReadOnly="True" TextBlock.LineHeight="1" FontSize="{StaticResource fontSizeNormal}" FontWeight="Normal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Path=CM.logWeigh,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </ScrollViewer>
                    
                </TabItem>
            </TabControl>

        </Grid>
       
        <GridSplitter Background="Transparent" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>

            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Path=CM.collectionWeight, UpdateSourceTrigger=PropertyChanged}"
                              Background="White"
                              CanUserAddRows="False" CanUserDeleteRows="False"
                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                              GridLinesVisibility="None"
                              HeadersVisibility="Column"
                              BorderThickness="1,1,1,1"
                              SelectionUnit="FullRow" SelectionMode="Extended">

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                        <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                        <Setter Property="FontSize" Value="{StaticResource fontSizeNormal}"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="FontSize" Value="{StaticResource fontSizeNormal}"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="Padding" Value="3,0,0,0"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Index" Binding="{Binding index}" Width="*"/>
                    <DataGridTextColumn Header="Weight (g)" Binding="{Binding weight}" Width="2*"/>
                </DataGrid.Columns>
            </DataGrid>

            <Button Command="{Binding ExportExcelCommand}" Grid.Row="1" BorderThickness="1,0,1,1" Background="White" Width="Auto" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="FontSize" Value="{StaticResource fontSizeButton}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=CM.isExporting}" Value="True">
                                <Setter Property="Content" Value="Exporting..."/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CM.isExporting}" Value="False">
                                <Setter Property="Content" Value="Export excel"/>
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>


    </Grid>

</UserControl>
